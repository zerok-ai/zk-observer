apiVersion: v1
kind: Namespace
metadata:
  name: bookstore
---
apiVersion: v1
kind: Service
metadata:
  name: bookstore1
  namespace: bookstore
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: bookstore1
---
apiVersion: v1
kind: Service
metadata:
  name: bookstore2
  namespace: bookstore
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: bookstore2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bookstore1
  name: bookstore1
  namespace: bookstore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookstore1
  template:
    metadata:
      labels:
        app: bookstore1
      annotations:
        instrumentation.opentelemetry.io/inject-go: zk-opentelemetry/demo-instrumentation-all
    spec:
      containers:
        - image: us-west1-docker.pkg.dev/zerok-dev/test-apps-public/zk-bookstore-app:test-logs
          imagePullPolicy: Always
          name: bookstore1
          ports:
            - containerPort: 8080
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
            privileged: true
            runAsUser: 0
        - env:
            - name: OTEL_GO_AUTO_TARGET_EXE
              value: /testapp/testapp
            - name: OTEL_TRACES_EXPORTER
              value: otlp
            - name: OTEL_METRICS_EXPORTER
              value: none
            - name: OTEL_LOGS_EXPORTER
              value: none
            - name: OTEL_SERVICE_NAME
              value: bookstore1
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: aws-otel-eks-new.monitoring:4317
            - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: OTEL_PROPAGATORS
              value: tracecontext,baggage
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: k8s.container.name=bookstore1,k8s.deployment.name=bookstore1,k8s.namespace.name=bookstore,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),service.version=0.0.3-all
          image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:v0.3.0-alpha
          imagePullPolicy: IfNotPresent
          name: opentelemetry-auto-instrumentation
          resources:
            limits:
              cpu: 500m
              memory: 32Mi
            requests:
              cpu: 50m
              memory: 32Mi
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
            privileged: true
            runAsUser: 0
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      shareProcessNamespace: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bookstore2
  name: bookstore2
  namespace: bookstore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookstore2
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-go: zk-opentelemetry/demo-instrumentation-all
      labels:
        app: bookstore2
    spec:
      containers:
        - image: us-west1-docker.pkg.dev/zerok-dev/test-apps-public/zk-bookstore-app:test-logs
          imagePullPolicy: Always
          name: bookstore2
          ports:
            - containerPort: 8080
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
            privileged: true
            runAsUser: 0
        - env:
            - name: OTEL_GO_AUTO_TARGET_EXE
              value: /testapp/testapp
            - name: OTEL_TRACES_EXPORTER
              value: otlp
            - name: OTEL_METRICS_EXPORTER
              value: none
            - name: OTEL_LOGS_EXPORTER
              value: none
            - name: OTEL_SERVICE_NAME
              value: bookstore2
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: aws-otel-eks-new.monitoring:4317
            - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: OTEL_PROPAGATORS
              value: tracecontext,baggage
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: k8s.container.name=bookstore2,k8s.deployment.name=bookstore2,k8s.namespace.name=bookstore,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),service.version=0.0.3-all
          image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:v0.3.0-alpha
          imagePullPolicy: IfNotPresent
          name: opentelemetry-auto-instrumentation
          resources:
            limits:
              cpu: 500m
              memory: 32Mi
            requests:
              cpu: 50m
              memory: 32Mi
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
            privileged: true
            runAsUser: 0
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      shareProcessNamespace: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: loadrun
  name: loadrun-deployment
  namespace: bookstore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loadrun
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: loadrun
    spec:
      containers:
        - args:
            - 'while true; do sleep 15; curl -H ''traceparent: 00-eeeeeeee''$(tr -dc ''a-f0-9''
          < /dev/urandom | head -c24)''-''$(tr -dc ''a-f0-9'' < /dev/urandom | head
          -c16)''-01'' -w "[%{http_code}] %{url} %{time_total}s \n"  http://bookstore1.bookstore.svc.cluster.local/books/from?target=bookstore2.bookstore.svc.cluster.local
          -o /dev/null -s; done;'
          command:
            - sh
            - -c
            - --
          image: alpine/curl
          imagePullPolicy: Always
          name: curl
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 40Mi