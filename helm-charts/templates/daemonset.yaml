apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: zk-observer
  labels:
  {{- include "helm-charts.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: zk-observer
    {{- include "helm-charts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: zk-observer
      {{- include "helm-charts.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: "ZK_REDIS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "redis"
              key: "redis-password"
        - name: "ZK_REDIS_HOST" # Setting Redis password from Secret
          valueFrom:
            configMapKeyRef:
              name: "zk-redis-config"
              key: "redisHost"
        image: {{.Values.global.dockerBase}}/{{.Values.image.repo}}:{{.Values.image.tag}}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: zk-observer
        ports:
        - containerPort: 8147
        resources: {}
        volumeMounts:
        - mountPath: /zk/config
          name: otlp-config
        - mountPath: /zk/badger-db
          name: badger-data
      volumes:
      - configMap:
          name: zk-observer
        name: otlp-config
      - name: badger-data
        emptyDir: {}