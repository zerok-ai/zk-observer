apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-controller-manager
  namespace: zk-opentelemetry
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-leader-election-role
  namespace: zk-opentelemetry
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - serviceaccounts
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - list
      - update
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - opentelemetry.io
    resources:
      - instrumentations
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - opentelemetry.io
    resources:
      - opentelemetrycollectors
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - opentelemetry.io
    resources:
      - opentelemetrycollectors/finalizers
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - opentelemetry.io
    resources:
      - opentelemetrycollectors/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - route.openshift.io
    resources:
      - routes
      - routes/custom-host
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-leader-election-rolebinding
  namespace: zk-opentelemetry
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: opentelemetry-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: opentelemetry-operator-controller-manager
    namespace: zk-opentelemetry
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opentelemetry-operator-manager-role
subjects:
  - kind: ServiceAccount
    name: opentelemetry-operator-controller-manager
    namespace: zk-opentelemetry
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opentelemetry-operator-proxy-role
subjects:
  - kind: ServiceAccount
    name: opentelemetry-operator-controller-manager
    namespace: zk-opentelemetry
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    "helm.sh/hook": pre-upgrade
  labels:
    app.kubernetes.io/name: opentelemetry-operator
    control-plane: controller-manager
  name: opentelemetry-operator-controller-manager-metrics-service
  namespace: zk-opentelemetry
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: opentelemetry-operator
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    "helm.sh/hook": pre-upgrade
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-webhook-service
  namespace: zk-opentelemetry
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    app.kubernetes.io/name: opentelemetry-operator
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
    control-plane: controller-manager
  name: opentelemetry-operator-controller-manager
  namespace: zk-opentelemetry
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-operator
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opentelemetry-operator
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --metrics-addr=127.0.0.1:8080
            - --enable-leader-election
            - --zap-log-level=info
            - --zap-time-encoding=rfc3339nano
            - --feature-gates=+operator.autoinstrumentation.go,+operator.autoinstrumentation.nginx
          image: ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator:0.87.0
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      serviceAccountName: opentelemetry-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: opentelemetry-operator-controller-manager-service-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-serving-cert
  namespace: zk-opentelemetry
spec:
  dnsNames:
    - opentelemetry-operator-webhook-service.zk-opentelemetry.svc
    - opentelemetry-operator-webhook-service.zk-opentelemetry.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: opentelemetry-operator-selfsigned-issuer
  secretName: opentelemetry-operator-controller-manager-service-cert
  subject:
    organizationalUnits:
      - opentelemetry-operator
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-selfsigned-issuer
  namespace: zk-opentelemetry
spec:
  selfSigned: {}
---
apiVersion: opentelemetry.io/v1alpha1
kind: Instrumentation
metadata:
  annotations:
    instrumentation.opentelemetry.io/default-auto-instrumentation-apache-httpd-image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-apache-httpd:1.0.3
    instrumentation.opentelemetry.io/default-auto-instrumentation-dotnet-image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-dotnet:1.0.2
    instrumentation.opentelemetry.io/default-auto-instrumentation-go-image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:v0.3.0-alpha
    instrumentation.opentelemetry.io/default-auto-instrumentation-java-image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java:1.30.0
    instrumentation.opentelemetry.io/default-auto-instrumentation-nginx-image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-apache-httpd:1.0.3
    instrumentation.opentelemetry.io/default-auto-instrumentation-nodejs-image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-nodejs:0.41.1
    instrumentation.opentelemetry.io/default-auto-instrumentation-python-image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-python:0.41b0
  name: demo-instrumentation-all
spec:
  exporter:
    endpoint: http://opentelemetry-collector.zk-opentelemetry.svc.cluster.local:4317
  go:
    env:
      - name: OTEL_TRACES_EXPORTER
        value: otlp
      - name: OTEL_METRICS_EXPORTER
        value: none
      - name: OTEL_LOGS_EXPORTER
        value: none
      - name: OTEL_LOG_LEVEL
        value: DEBUG
    image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:v0.3.0-alpha
    resourceRequirements:
      limits:
        cpu: 500m
        memory: 32Mi
      requests:
        cpu: 50m
        memory: 32Mi
  java:
    env:
      - name: OTEL_TRACES_EXPORTER
        value: otlp
      - name: OTEL_METRICS_EXPORTER
        value: none
      - name: OTEL_LOGS_EXPORTER
        value: none
      - name: OTEL_LOG_LEVEL
        value: DEBUG
    image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java:1.30.0
    resources:
      limits:
        cpu: 500m
        memory: 64Mi
      requests:
        cpu: 50m
        memory: 64Mi
  nodejs:
    env:
      - name: OTEL_TRACES_EXPORTER
        value: otlp
      - name: OTEL_METRICS_EXPORTER
        value: none
      - name: OTEL_LOGS_EXPORTER
        value: none
      - name: OTEL_LOG_LEVEL
        value: DEBUG
    image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-nodejs:0.41.1
    resourceRequirements:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 128Mi
  propagators:
    - tracecontext
    - baggage
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: opentelemetry
spec:
  config: |-
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
    exporters:
      otlphttp/zerok:
        endpoint: http://zk-otlp-receiver.zk-client.svc.cluster.local
        compression: "none"
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: []
          exporters: [otlphttp/zerok]
  hostNetwork: true
  mode: daemonset
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: zk-opentelemetry/opentelemetry-operator-serving-cert
    "helm.sh/hook": post-upgrade
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: opentelemetry-operator-webhook-service
        namespace: zk-opentelemetry
        path: /mutate-opentelemetry-io-v1alpha1-instrumentation
    failurePolicy: Fail
    name: minstrumentation.kb.io
    timeoutSeconds: 30
    rules:
      - apiGroups:
          - opentelemetry.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - instrumentations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: opentelemetry-operator-webhook-service
        namespace: zk-opentelemetry
        path: /mutate-opentelemetry-io-v1alpha1-opentelemetrycollector
    failurePolicy: Fail
    name: mopentelemetrycollector.kb.io
    timeoutSeconds: 30
    rules:
      - apiGroups:
          - opentelemetry.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - opentelemetrycollectors
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: opentelemetry-operator-webhook-service
        namespace: zk-opentelemetry
        path: /mutate-v1-pod
    failurePolicy: Ignore
    name: mpod.kb.io
    timeoutSeconds: 30
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - pods
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: zk-opentelemetry/opentelemetry-operator-serving-cert
    "helm.sh/hook": post-upgrade
  labels:
    app.kubernetes.io/name: opentelemetry-operator
  name: opentelemetry-operator-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: opentelemetry-operator-webhook-service
        namespace: zk-opentelemetry
        path: /validate-opentelemetry-io-v1alpha1-instrumentation
    failurePolicy: Fail
    name: vinstrumentationcreateupdate.kb.io
    timeoutSeconds: 30
    rules:
      - apiGroups:
          - opentelemetry.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - instrumentations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: opentelemetry-operator-webhook-service
        namespace: zk-opentelemetry
        path: /validate-opentelemetry-io-v1alpha1-instrumentation
    failurePolicy: Ignore
    name: vinstrumentationdelete.kb.io
    timeoutSeconds: 30
    rules:
      - apiGroups:
          - opentelemetry.io
        apiVersions:
          - v1alpha1
        operations:
          - DELETE
        resources:
          - instrumentations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: opentelemetry-operator-webhook-service
        namespace: zk-opentelemetry
        path: /validate-opentelemetry-io-v1alpha1-opentelemetrycollector
    failurePolicy: Fail
    name: vopentelemetrycollectorcreateupdate.kb.io
    timeoutSeconds: 30
    rules:
      - apiGroups:
          - opentelemetry.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - opentelemetrycollectors
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: opentelemetry-operator-webhook-service
        namespace: zk-opentelemetry
        path: /validate-opentelemetry-io-v1alpha1-opentelemetrycollector
    failurePolicy: Ignore
    name: vopentelemetrycollectordelete.kb.io
    timeoutSeconds: 30
    rules:
      - apiGroups:
          - opentelemetry.io
        apiVersions:
          - v1alpha1
        operations:
          - DELETE
        resources:
          - opentelemetrycollectors
    sideEffects: None
